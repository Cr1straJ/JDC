@model Group

@{
    ViewData["Title"] = "Таблица Учащихся";
    DateTime currentDate = new DateTime(DateTime.Now.Year, 9, 1);
    int countdDay = DateTime.DaysInMonth(currentDate.Year, currentDate.Month);
}

<h3 style="margin: 0 -15px 25px -15px;" id="viewtitle" data-groupdId="@Model.Id" data-lessonId="@ViewData["LessonID"]">Группа: @(Model.Name), дисциплина: @(Model.Lessons[0].Title) </h3>

@if (Model.Students.Count == 0)
{
    <div class="alert alert-warning" role="alert">
         Упс, список студентов пуст.
    </div>
}
else
{
    <div class="row">
        <div class="col-auto" style="padding: 0;">  
           <table class="journal-table" style="text-align: center; display: inline-block;">
               <thead>
                   <tr style="height: 50px; ">
                       <th>№</th>
                   </tr>
               </thead>
               <tbody>
                   @for (int i = 0; i < Model.Students.Count; i++)
                   {
                       <tr id="tr1@(i)">
                           <td>
                               <b>@(i + 1)</b>
                           </td>
                       </tr>
                   }
               </tbody>
           </table>
        </div>

        <div id="hideableTable" class="col-auto" style="padding: 0;">  
           <table class="journal-table" style="text-align: center; display: inline-block;">
               <thead>
                   <tr style="height: 50px; ">
                       <th style="border-left: none;">Фамилия, имя</th>
                       <th>Ср.балл</th>
                   </tr>
               </thead>
               <tbody>
                   @for (int i = 0; i < Model.Students.Count; i++)
                   {
                        <tr id="tr2@(i)">
                           <td>
                               @(Model.Students[i].User.LongName)
                           </td>
                           <td id="@(Model.Students[i].Id)average">
                               @(Model.Students[i].Grades.Count == 0 ? "-" : Model.Students[i].Grades.Average(grade => grade.Value))
                           </td>
                       </tr>
                   }
               </tbody>
           </table>
        </div>

        <div class="col-auto hide-journal-container">
            <button id="hideJournalButton" type="button" class="btn hide-journal-button">
                <i class="hide-button-icon fa fa-angle-double-left" aria-hidden="true"></i>
                <i class="hide-button-icon d-none fa fa-angle-double-right" aria-hidden="true"></i>
            </button>
        </div>

        <div id="gradeTable" class="col scroll-table" style="padding: 0;">
            <table class="journal-table" style="text-align: center; display: inline-block;">
            <thead>
                <tr style="height: 25px;">
                    <th style="border-left: none;" colspan="@(countdDay)">@currentDate.ToString("Y")</th>
                </tr>

                <tr style="height: 25px;">
                    @for (int j = 1; j <= countdDay; j++, currentDate = currentDate.AddDays(1))
                    {
                        <th>
                            @currentDate.ToString("ddd"), @(j)
                            <button type="button" class="w-13 btn border-0 p-0 text-white position-relative">
                                <i class="doc-icon fa fa-file-text-o" aria-hidden="true"></i>
                            </button>
                            
                        </th>
                    }
                </tr>
            </thead>

            <tbody>
                @{ 
                    currentDate = new DateTime(DateTime.Now.Year, 9, 1);
                }

                @for (int i = 0; i < Model.Students.Count; i++)
                {
                    <tr id="tr3@(i)">
                        @for (int j = 1; j <= countdDay; j++, currentDate = currentDate.AddDays(1))
                        {
                             <td class="cell">
                                @{
                                    Grade grade = Model.Students[i].Grades.Where(grade => grade.BillingDate.Equals(currentDate)).FirstOrDefault();
                                    
                                    if (grade is not null)
                                    {
                                        <button type="button" class="btn" data-toggle="modal" data-gradeid="@grade.Id" data-target="#setGradeModal" data-title="@($"{currentDate:dddd}, {currentDate:M}")" data-studentid="@(Model.Students[i].Id)" data-date="@currentDate.ToString("ddMMyyyy")">
                                            @grade.Value
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn" data-toggle="modal" data-target="#setGradeModal" data-title="@($"{currentDate:dddd}, {currentDate:M}")" data-studentid="@(Model.Students[i].Id)" data-date="@currentDate.ToString("ddMMyyyy")"></button>
                                    }
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
        </div>
    </div>
}

<div class="modal fade" id="setGradeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle">Сегодня</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="recipient-name" class="form-control-label">Оценка:</label>
                    <input type="text" class="form-control" id="grade">
                </div>
                <div class="form-group">
                    <label for="message-text" class="form-control-label">Замечания:</label>
                    <textarea class="form-control" id="comment"></textarea>
                </div>
                <div class="form-check">
                    <label class="form-check-label">
                        <input id="absent" class="form-check-input" type="checkbox" value="">
                        Отсутствие на уроке
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                <button id="setGradeButton" type="button" class="btn btn-primary">Сохранить</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    let group = JSON.parse('@Json.Serialize(@Model)');
</script>